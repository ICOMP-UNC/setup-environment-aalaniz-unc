name: "Doc check"
description: "Code documentation generation with Doxygen"

runs:
  using: "composite"
  steps:
    - name: "Run doxygen command"
      shell: bash
      run: |
          # We only make check, not changes
          DOX_CONF_FILE=$(pwd)/Doxyfile

          # The command block concatenates the contents of the configuration file pointed to by DOX_CONF_FILE 
          # with the line that specifies the absolute paths of the directories that Doxygen should examine. 
          # This concatenation is saved in $DOX_CONF_FILE
          {
              cat $DOX_CONF_FILE
              echo "INPUT" = $(pwd)/src $(pwd)/include $(pwd)/lib
          } > $DOX_CONF_FILE

          # Generate documentation
          sudo dot -c

          ERROR_FILE_FLAG=$(pwd)/dox_errors.txt

          # Runs doxygen by generating a configuration script from a Doxygen configuration file located in DOX_CONF_FILE. 
          # The output will be directed to a file whose name is specified by $ERROR_FILE_FLAG
          DOXYGEN_COMMAND=$(doxygen -s $DOX_CONF_FILE) > $ERROR_FILE_FLAG

          if [ -s $ERROR_FILE_FLAG ]; then
              echo "Error: There are some files that are not documented correctly"
              exit 1
          else
              echo "All files are documented correctly. Niiiceee"
              exit 0
          fi
    # Upload errors as an artifact, when failed
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Doxygen errors!!!
        path: $(pwd)/dox_errors.txt
        retention-days: 1
